(()=>{"use strict";const t=document.querySelector(".slider");const e=document.getElementById("state"),n=document.getElementById("city");function o(t){n.textContent=t[0],n.style.textTransform="capitalize",e.textContent=t[1],e.style.textTransform="capitalize"}function c(t,e){const n=document.createElement("div");n.classList.add("hourly-info");const o=document.createElement("p");o.classList.add("hour"),o.textContent=function(t){let e=t.split(/:| /).join("");const n=e.slice(e.length-2);return e=e.length>7?e.slice(0,2):e.slice(0,1),e+n}(t.dt.slice(11));const c=function(t){const e=document.createElement("img");return e.classList.add("weather-icon"),e.src=`https://openweathermap.org/img/wn/${t}@2x.png`,e}(t.weather[0].icon),i=document.createElement("div");i.classList.add("temp-container");const d=document.createElement("p");d.classList.add("hourly-temp"),d.textContent=Math.round(t.main.temp);const a=document.createElement("p");return a.classList.add("hourly-degrees"),a.textContent="metric"===e?"°C":"°F",i.append(d,a),n.append(o,c,i),n}function i(t){let e=0;const n=t[0].dt.slice(0,10);return t.forEach((t=>{n===t.dt.slice(0,10)&&e++})),e}const d=document.getElementById("search"),a=document.querySelector("button");function s(){"0px"===window.getComputedStyle(d).getPropertyValue("width")?(d.setAttribute("style","width: 75%; transition: width .5s ease;"),setTimeout((()=>{a.style.display="block"}),500)):(d.removeAttribute("style","width: 75%;"),d.style.transition="width .5s ease",setTimeout((()=>{a.style.display="none"}),100))}async function l(t,e){let n=t[0],d=t[1];console.log(t);const a=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${n},%20${d}&limit=1&appid=c4404ba7cc6d37e8768e9682ed0c7259`,{mode:"cors"});!async function(t,e,n){let d=t[0].lat,a=t[0].lon;const s=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${d}&lon=${a}&appid=c4404ba7cc6d37e8768e9682ed0c7259&units=${e}`,{mode:"cors"}),l=await s.json();console.log(l),function(t,e,n){const o=document.getElementById("main-left"),d=t.list[0];document.getElementById("weather-condition").textContent=d.weather[0].description,document.getElementById("temperature").textContent=Math.round(d.main.temp),document.getElementById("low").textContent=e[0],document.getElementById("high").textContent=e[1],o.removeChild(o.lastChild),function(t,e){const n=document.getElementById("main-left"),o=document.createElement("div");o.classList.add("todays-card");const d=document.createElement("div");d.classList.add("hourly-container"),t.slice(0,i(t)).forEach((t=>{d.appendChild(c(t,e))})),o.appendChild(d);const a=document.createElement("div");a.classList.add("scroll-box"),a.appendChild(o),n.appendChild(a)}(t.list,n),function(t,e){!function(t,e){let n=1,o=function(t){let e=1,n=t[0].dt.slice(0,10);return t.forEach((t=>{t.dt.slice(0,10)!==n&&(e++,n=t.dt.slice(0,10))})),e}(t),d=0,a=i(t),s=a;const l=document.getElementById("main-right"),r=document.getElementById("card-wrapper");for(r.textContent="";n<=o;){let o=t.slice(d,s);const l=document.createElement("div");l.classList.add("cards",`day${n}`);const m=document.createElement("p");m.classList.add("card-day"),m.textContent=new Intl.DateTimeFormat("en-us",{weekday:"short"}).format(new Date(o[0].dt.slice(0,10)));const u=document.createElement("div");u.classList.add("hourly-container"),o.forEach((t=>{u.appendChild(c(t,e))})),l.append(m,u),r.appendChild(l),n++,d+=a,d!==t.length&&(a=i(t.slice(d))),s+=a}l.appendChild(r)}(t.slice(i(t)),e)}(t.list,n)}(l,function(t){const e=t.list,n=r(t.list[0].dt).slice(0,10);let o=Math.round(t.list[0].main.temp_min),c=Math.round(t.list[0].main.temp_max);return e.forEach((t=>{let e=r(t.dt).slice(0,10),i=Math.round(t.main.temp_min),d=Math.round(t.main.temp_max);t.dt=r(t.dt),e===n&&(i<=o&&(o=i),d>=c&&(c=d))})),[o,c]}(l),e),o(n)}(await a.json(),e,t)}function r(t){const e=new Date(1e3*t).toLocaleDateString(),n=new Date(1e3*t).toLocaleTimeString();let o="";return o=e.length<10?"0"+e:e,o+`, ${n}`}let m="imperial",u=[];const p=["Brooklyn","New York"];window.onload=t=>{l(p,m)},document.querySelector(".switch").addEventListener("click",(e=>{m=function(){getComputedStyle(document.body).getPropertyValue("--switch-rd");const e=document.querySelector(".switch"),n=document.getElementById("degrees"),o=document.getElementById("high-degrees"),c=document.getElementById("low-degrees");return"0px"===window.getComputedStyle(t).getPropertyValue("left")?(t.setAttribute("style","left: 50%; transition: all .5s ease;"),e.setAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043; transition: all .5s ease;"),n.textContent="°C",o.textContent="°C",c.textContent="°C","metric"):(t.setAttribute("style","left: 0; transition: all .5s ease;"),e.removeAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043;"),e.style.transition="all .5s ease",n.textContent="°F",o.textContent="°F",c.textContent="°F","imperial")}(),u.length>0?l(u,m):l(p,m)}));const h=document.querySelector("form");h.addEventListener("click",(t=>{if("search-icon"===t.target.id)s();else if("right-arrow"===t.target.id){t.preventDefault(),s();const e=document.getElementById("search").value;u=e.indexOf(",")>=0?e.split(", "):e.split(","),l(u,m),h.reset()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,