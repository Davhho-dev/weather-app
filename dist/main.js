(()=>{"use strict";const t=document.querySelector(".slider");const e=document.getElementById("state"),n=document.getElementById("city");function o(t){n.textContent=t[0],n.style.textTransform="capitalize",e.textContent=t[1],e.style.textTransform="capitalize"}function d(t){let e=0;const n=t[0].dt.slice(0,10);return t.forEach((t=>{n===t.dt.slice(0,10)&&e++})),e}function c(t){let e=t.split(/:| /).join("");const n=e.slice(e.length-2);return e=e.length>7?e.slice(0,2):e.slice(0,1),e+n}function a(t){const e=document.createElement("img");return e.classList.add("weather-icon"),e.src=`https://openweathermap.org/img/wn/${t}@2x.png`,e}const i=document.getElementById("search"),s=document.querySelector("button");function l(){"0px"===window.getComputedStyle(i).getPropertyValue("width")?(i.setAttribute("style","width: 75%; transition: width .5s ease;"),setTimeout((()=>{s.style.display="block"}),500)):(i.removeAttribute("style","width: 75%;"),i.style.transition="width .5s ease",setTimeout((()=>{s.style.display="none"}),100))}async function r(t,e){let n=t[0],i=t[1];console.log(t);const s=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${n},%20${i}&limit=1&appid=c4404ba7cc6d37e8768e9682ed0c7259`,{mode:"cors"});!async function(t,e,n){let i=t[0].lat,s=t[0].lon;const l=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${i}&lon=${s}&appid=c4404ba7cc6d37e8768e9682ed0c7259&units=${e}`,{mode:"cors"}),r=await l.json();console.log(r),function(t,e,n){const o=document.getElementById("main-left"),i=t.list[0];document.getElementById("weather-condition").textContent=i.weather[0].description,document.getElementById("temperature").textContent=Math.round(i.main.temp),document.getElementById("low").textContent=e[0],document.getElementById("high").textContent=e[1],o.removeChild(o.lastChild),function(t,e){const n=document.getElementById("main-left"),o=document.createElement("div");o.classList.add("todays-card");const i=document.createElement("div");i.classList.add("hourly-container"),t.slice(0,d(t)).forEach((t=>{i.appendChild(function(t,e){const n=document.createElement("div");n.classList.add("hourly-info");const o=document.createElement("p");o.classList.add("hour"),o.textContent=c(t.dt.slice(11));const d=a(t.weather[0].icon),i=document.createElement("div");i.classList.add("temp-container");const s=document.createElement("p");s.classList.add("hourly-temp"),s.textContent=Math.round(t.main.temp);const l=document.createElement("p");return l.classList.add("hourly-degrees"),l.textContent="metric"===e?"°C":"°F",i.append(s,l),n.append(o,d,i),n}(t,e))})),o.appendChild(i);const s=document.createElement("div");s.classList.add("scroll-box"),s.appendChild(o),n.appendChild(s)}(t.list,n),function(t,e){!function(t,e){let n=1,o=function(t){let e=1,n=t[0].dt.slice(0,10);return t.forEach((t=>{t.dt.slice(0,10)!==n&&(e++,n=t.dt.slice(0,10))})),e}(t),i=0,s=d(t),l=s;const r=document.getElementById("main-right"),m=document.getElementById("card-wrapper");for(m.textContent="";n<=o;){let o=t.slice(i,l);const r=document.createElement("div");r.classList.add("cards",`day${n}`);const u=document.createElement("p");u.classList.add("card-day"),u.textContent=new Intl.DateTimeFormat("en-us",{weekday:"long"}).format(new Date(o[0].dt.slice(0,10))),r.appendChild(u);const p=document.createElement("div");p.classList.add("hourly-container"),o.forEach((t=>{const n=document.createElement("div");n.classList.add("next-day-info");const o=document.createElement("p");o.classList.add("next-day-time"),o.textContent=c(t.dt.slice(11));const d=document.createElement("div");d.classList.add("next-day-temp-container");const i=document.createElement("p");i.classList.add("next-day-temp"),i.textContent=Math.round(t.main.temp);const s=document.createElement("p");s.classList.add("next-day-degrees"),s.textContent="metric"===e?"°C":"°F",d.appendChild(i),d.appendChild(s),n.appendChild(o),n.appendChild(a(t.weather[0].icon)),n.appendChild(d),p.appendChild(n),r.appendChild(p)})),m.appendChild(r),n++,i+=s,i!==t.length&&(s=d(t.slice(i))),l+=s}r.appendChild(m)}(t.slice(d(t)),e)}(t.list,n)}(r,function(t){const e=t.list,n=m(t.list[0].dt).slice(0,10);let o=Math.round(t.list[0].main.temp_min),d=Math.round(t.list[0].main.temp_max);return e.forEach((t=>{let e=m(t.dt).slice(0,10),c=Math.round(t.main.temp_min),a=Math.round(t.main.temp_max);t.dt=m(t.dt),e===n&&(c<=o&&(o=c),a>=d&&(d=a))})),[o,d]}(r),e),o(n)}(await s.json(),e,t)}function m(t){const e=new Date(1e3*t).toLocaleDateString(),n=new Date(1e3*t).toLocaleTimeString();let o="";return o=e.length<10?"0"+e:e,o+`, ${n}`}let u="imperial",p=[];const h=["Brooklyn","New York"];window.onload=t=>{r(h,u)},document.querySelector(".switch").addEventListener("click",(e=>{u=function(){getComputedStyle(document.body).getPropertyValue("--switch-rd");const e=document.querySelector(".switch"),n=document.getElementById("degrees"),o=document.getElementById("high-degrees"),d=document.getElementById("low-degrees");return"0px"===window.getComputedStyle(t).getPropertyValue("left")?(t.setAttribute("style","left: 50%; transition: all .5s ease;"),e.setAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043; transition: all .5s ease;"),n.textContent="°C",o.textContent="°C",d.textContent="°C","metric"):(t.setAttribute("style","left: 0; transition: all .5s ease;"),e.removeAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043;"),e.style.transition="all .5s ease",n.textContent="°F",o.textContent="°F",d.textContent="°F","imperial")}(),p.length>0?r(p,u):r(h,u)}));const y=document.querySelector("form");y.addEventListener("click",(t=>{if("search-icon"===t.target.id)l();else if("right-arrow"===t.target.id){t.preventDefault(),l();const e=document.getElementById("search").value;p=e.indexOf(",")>=0?e.split(", "):e.split(","),r(p,u),y.reset()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,