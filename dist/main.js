(()=>{"use strict";const t=document.querySelector(".slider");const e=document.getElementById("state"),n=document.getElementById("city");function o(t){let e=0;const n=t[0].dt.slice(0,10);return t.forEach((t=>{n===t.dt.slice(0,10)&&e++})),e}function i(t){let e=t.split(/:| /).join("");const n=e.slice(e.length-2);return e=e.length>7?e.slice(0,2):e.slice(0,1),e+n}function a(t){const e=document.createElement("img");return e.classList.add("weather-icon"),e.src=`https://openweathermap.org/img/wn/${t}@2x.png`,e}const d=document.getElementById("search"),c=document.querySelector("button");function s(){"0px"===window.getComputedStyle(d).getPropertyValue("width")?(d.setAttribute("style","width: 75%; transition: width .5s ease;"),setTimeout((()=>{c.style.display="block"}),500)):(d.removeAttribute("style","width: 75%;"),d.style.transition="width .5s ease",setTimeout((()=>{c.style.display="none"}),100))}async function l(t,e){let n=t[0],d=t[1];console.log(t);const c=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${n},%20${d}&limit=1&appid=c4404ba7cc6d37e8768e9682ed0c7259`,{mode:"cors"});!async function(t,e){let n=t[0].lat,d=t[0].lon;const c=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${n}&lon=${d}&appid=c4404ba7cc6d37e8768e9682ed0c7259&units=${e}`,{mode:"cors"}),s=await c.json();console.log(s),function(t,e,n){const d=t.list[0];document.getElementById("weather-condition").textContent=d.weather[0].description,document.getElementById("temperature").textContent=Math.round(d.main.temp),document.getElementById("low").textContent=e[0],document.getElementById("high").textContent=e[1],function(t,e){!function(t,e){let n=1,d=function(t){let e=1,n=t[0].dt.slice(0,10);return t.forEach((t=>{t.dt.slice(0,10)!==n&&(e++,n=t.dt.slice(0,10))})),e}(t),c=0,s=o(t),l=s;const r=document.getElementById("main-right"),m=document.getElementById("card-wrapper");for(m.textContent="";n<=d;){let d=t.slice(c,l);const r=document.createElement("div");r.classList.add("cards",`day${n}`);const u=document.createElement("p");u.classList.add("card-day"),u.textContent=new Intl.DateTimeFormat("en-us",{weekday:"long"}).format(new Date(d[0].dt.slice(0,10))),r.appendChild(u),d.forEach((t=>{const n=document.createElement("div");n.classList.add("next-day-info");const o=document.createElement("p");o.classList.add("next-day-time"),o.textContent=i(t.dt.slice(11));const d=document.createElement("div");d.classList.add("next-day-temp-container");const c=document.createElement("p");c.classList.add("next-day-temp"),c.textContent=Math.round(t.main.temp);const s=document.createElement("p");s.classList.add("next-day-degrees"),s.textContent="metric"===e?"°C":"°F",d.appendChild(c),d.appendChild(s),n.appendChild(o),n.appendChild(a(t.weather[0].icon)),n.appendChild(d),r.appendChild(n)})),m.appendChild(r),n++,c+=s,c!==t.length&&(s=o(t.slice(c))),l+=s}r.appendChild(m)}(t.slice(o(t)),e)}(t.list,n)}(s,function(t){const e=t.list,n=r(t.list[0].dt).slice(0,10);let o=Math.round(t.list[0].main.temp_min),i=Math.round(t.list[0].main.temp_max);return e.forEach((t=>{let e=r(t.dt).slice(0,10),a=Math.round(t.main.temp_min),d=Math.round(t.main.temp_max);t.dt=r(t.dt),e===n&&(a<=o&&(o=a),d>=i&&(i=d))})),[o,i]}(s),e)}(await c.json(),e)}function r(t){const e=new Date(1e3*t).toLocaleDateString(),n=new Date(1e3*t).toLocaleTimeString();let o="";return o=e.length<10?"0"+e:e,o+`, ${n}`}let m="imperial",u=[];document.querySelector(".switch").addEventListener("click",(e=>{m=function(){getComputedStyle(document.body).getPropertyValue("--switch-rd");const e=document.querySelector(".switch"),n=document.getElementById("degrees"),o=document.getElementById("high-degrees"),i=document.getElementById("low-degrees");return"0px"===window.getComputedStyle(t).getPropertyValue("left")?(t.setAttribute("style","left: 50%; transition: all .5s ease;"),e.setAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043; transition: all .5s ease;"),n.textContent="°C",o.textContent="°C",i.textContent="°C","metric"):(t.setAttribute("style","left: 0; transition: all .5s ease;"),e.removeAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043;"),e.style.transition="all .5s ease",n.textContent="°F",o.textContent="°F",i.textContent="°F","imperial")}(),u.length>0&&l(u,m)})),document.querySelector("form").addEventListener("click",(t=>{if("search-icon"===t.target.id)s();else if("right-arrow"===t.target.id){t.preventDefault(),s();const o=document.getElementById("search").value;u=o.indexOf(",")>=0?o.split(", "):o.split(","),l(u,m),function(t){n.textContent=t[0],n.style.textTransform="capitalize",e.textContent=t[1],e.style.textTransform="capitalize"}(u)}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,