(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>o});var r=t(537),A=t.n(r),a=t(645),i=t.n(a)()(A());i.push([n.id,'* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    color: white;\n}\n\nbody,\nhtml {\n    min-height: 100vh;\n    background-color: var(--pri-cl);\n}\n\n:root {\n    --pri-ft: "Lato", "Poppins", sans-serif;\n    --sec-ft: "Merriweather", "Poppins", sans-serif;\n    --pri-cl: #212B3C;\n    --switch-rd: 15px;\n    --search-icon: 32px;\n}\n\n#wrapper {\n    height: 100%;\n    display: grid;\n    grid-template-rows: 1fr 7fr;\n    gap: 5rem;\n}\n\n#header {\n    margin-top: 2rem;\n    background-color: var(--pri-cl);\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n}\n\n.title {\n    margin: auto;\n    font-family: var(--pri-ft);\n    font-size: 2.5rem;\n}\n\n.switch-con {\n    margin: auto 5rem;\n}\n\n.switch {\n    position: relative;\n    padding: .5rem 1rem;\n    width: fit-content;\n    font-family: var(--sec-ft);\n    font-size: 1.25rem;\n    display: flex;\n    gap: 1rem;\n    cursor: pointer;\n    border-radius: var(--switch-rd);\n    background: linear-gradient(145deg, #232e40, #1e2736);\n    box-shadow: 20px 20px 18px #1d2635,\n                -20px -20px 18px #253043;\n}\n\n.slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #171f2b;\n    height: 100%;\n    width: 50%;\n    border-radius: var(--switch-rd);\n    cursor: pointer;\n}\n\n.slider-right {\n    padding-left: 1rem;\n}\n\n#main {\n    display: grid;\n    grid-template-columns: 3fr 4fr;\n    grid-template-areas: "main-left main-right"\n}\n\n#main-left {\n    grid-area: main-left;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n}\n\n.weather-con {\n    height: 50%;\n    width: 75%;\n    margin-left: -8rem;\n    background-color: var(--pri-cl);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2.5rem;\n    border-radius: 50px;\n    background: linear-gradient(145deg, #1e2736, #232e40);\n    box-shadow: 20px 20px 60px #1c2533,\n                -20px -20px 60px #263145;\n}\n\nform {\n    width: 100%;\n    margin-left: 6.25rem;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: .5rem;\n}\n\n.material-symbols-rounded {\n    font-size: var(--search-icon) !important;\n    cursor: pointer;\n}\n\ninput {\n    width: 0%;\n    font-family: var(--pri-ft);\n    font-size: 1.75rem;\n    color: white;\n    background-color: rgba(0, 0, 0, 0.5);\n    border: none;\n}\n\ninput:focus {\n    outline: none;\n}\n\nbutton {\n    background-color: transparent;\n    border: none;\n    display: none;\n}\n\n#weather-condition {\n    font-family: var(--sec-ft);\n    font-size: 2rem;\n    text-transform: capitalize;\n}\n\n.temperature-con {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.location-con {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.location {\n    font-family: var(--pri-ft);\n}\n\n#state {\n    font-size: 2rem;\n}\n\n#city {\n    font-size: 3rem;\n}\n\n.temperature-con {\n    font-family: var(--sec-ft);\n}\n\n#temperature {\n    font-size: 3.5rem;\n}\n\n#degrees {\n    font-size: 1.5rem;\n    padding-bottom: 1.5rem;\n}\n\n.temp-info {\n    margin-left: 1rem;\n    padding-left: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    border-left: 5px solid black;\n}\n\n.hi-lo {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: var(--sec-ft);\n}\n\n.info-temp {\n    padding-left: .25rem;\n}\n\n.scroll-box {\n    margin-left: -8rem;\n    width:75%;\n    overflow: auto;\n    white-space: nowrap;\n    border-radius: 50px;\n    background: linear-gradient(145deg, #1e2736, #232e40);\n    box-shadow: 20px 20px 60px #1c2533,\n                -20px -20px 60px #263145;\n}\n\n.todays-card {\n    width: calc(100% + 120px);\n    padding: 1rem;\n}\n\n.hourly-container {\n    display: flex;\n    align-items: center;\n}\n\n.hourly-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.hour {\n    font-family: var(--pri-ft);\n    font-size: 1.5rem;\n}\n\n.temp-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: var(--sec-ft);\n}\n\n.hourly-temp {\n    font-size: 1.5rem;\n}\n\n#card-wrapper {\n    margin-bottom: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n.cards {\n    width: 95%;\n    padding: 1rem;\n    font-family: var(--sec-ft);\n    display: grid;\n    grid-template-columns: .25fr 2fr;\n    gap: 5rem;\n    border-radius: 50px;\n    background: linear-gradient(145deg, #1e2736, #232e40);\n    box-shadow: 20px 20px 60px #1c2533,\n                -20px -20px 60px #263145;\n}\n\n.card-day {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    text-align: center;\n    margin: auto;\n}\n\n.hourly-container {\n    display: flex;\n    gap: 2rem;\n}\n\n.next-day-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.next-day-time {\n    font-family: var(--pri-ft);\n    font-size: 1.5rem;\n\n}\n.next-day-temp-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: var(--sec-ft);\n}\n\n.next-day-temp {\n    font-size: 1.5rem;\n}\n\n.next-day-degrees {\n    font-family: var(--sec-ft);\n}\n\n/*MEDIA BREAKPOINTS */\n/*Mobile Devices*/\n@media screen and (max-width: 425px) {\n    #main {\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 2fr 2fr;\n        grid-template-areas: "main-left"\n                             "main-right";\n    }\n\n    .weather-con,\n    .scroll-box {\n        margin-left: 0rem;\n    }\n\n    .weather-con {\n        height: 65%;\n    }\n\n    #card-wrapper {\n        align-items: center;\n    }\n\n    .cards {\n        gap: 2rem;\n        width: 100%;\n    }\n\n    .weather-icon {\n        width: 50px;\n        height: 50px;\n    }\n\n    .card-day {\n        font-size: 1.5rem;\n        text-align: left;\n    }\n}\n\n/*Tablets and Laptops*/\n@media screen and (min-width: 768px) and (max-width: 1023px) {\n    #main {\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 2fr 2fr;\n        grid-template-areas: "main-left"\n                             "main-right";\n    }\n\n    .weather-con,\n    .scroll-box {\n        margin-left: 0rem;\n    }\n\n    .weather-con {\n        height: 65%;\n    }\n\n    #card-wrapper {\n        align-items: center;\n    }\n\n    .cards {\n        gap: 2rem;\n        width: 100%;\n    }\n\n    .weather-icon {\n        width: 75px;\n        height: 75px;\n    }\n\n    .card-day {\n        font-size: 1.5rem;\n        text-align: left;\n    }\n}\n\n/*Large Laptops*/\n@media screen and (min-width: 1024px) and (max-width: 1440px) {\n    #main {\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 2fr 2fr;\n        grid-template-areas: "main-left"\n                             "main-right";\n    }\n\n    .weather-con,\n    .scroll-box {\n        margin-left: 0rem;\n    }\n\n    .weather-con {\n        height: 65%;\n    }\n\n    #card-wrapper {\n        align-items: center;\n    }\n\n    .cards {\n        gap: 2rem;\n        width: 100%;\n    }\n\n    .weather-icon {\n        width: 75px;\n        height: 75px;\n    }\n\n    .card-day {\n        font-size: 1.5rem;\n        text-align: left;\n    }\n\n    .hourly-container {\n        gap: 5rem;\n    }\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    color: white;\n}\n\nbody,\nhtml {\n    min-height: 100vh;\n    background-color: var(--pri-cl);\n}\n\n:root {\n    --pri-ft: "Lato", "Poppins", sans-serif;\n    --sec-ft: "Merriweather", "Poppins", sans-serif;\n    --pri-cl: #212B3C;\n    --switch-rd: 15px;\n    --search-icon: 32px;\n}\n\n#wrapper {\n    height: 100%;\n    display: grid;\n    grid-template-rows: 1fr 7fr;\n    gap: 5rem;\n}\n\n#header {\n    margin-top: 2rem;\n    background-color: var(--pri-cl);\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n}\n\n.title {\n    margin: auto;\n    font-family: var(--pri-ft);\n    font-size: 2.5rem;\n}\n\n.switch-con {\n    margin: auto 5rem;\n}\n\n.switch {\n    position: relative;\n    padding: .5rem 1rem;\n    width: fit-content;\n    font-family: var(--sec-ft);\n    font-size: 1.25rem;\n    display: flex;\n    gap: 1rem;\n    cursor: pointer;\n    border-radius: var(--switch-rd);\n    background: linear-gradient(145deg, #232e40, #1e2736);\n    box-shadow: 20px 20px 18px #1d2635,\n                -20px -20px 18px #253043;\n}\n\n.slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: #171f2b;\n    height: 100%;\n    width: 50%;\n    border-radius: var(--switch-rd);\n    cursor: pointer;\n}\n\n.slider-right {\n    padding-left: 1rem;\n}\n\n#main {\n    display: grid;\n    grid-template-columns: 3fr 4fr;\n    grid-template-areas: "main-left main-right"\n}\n\n#main-left {\n    grid-area: main-left;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n}\n\n.weather-con {\n    height: 50%;\n    width: 75%;\n    margin-left: -8rem;\n    background-color: var(--pri-cl);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2.5rem;\n    border-radius: 50px;\n    background: linear-gradient(145deg, #1e2736, #232e40);\n    box-shadow: 20px 20px 60px #1c2533,\n                -20px -20px 60px #263145;\n}\n\nform {\n    width: 100%;\n    margin-left: 6.25rem;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: .5rem;\n}\n\n.material-symbols-rounded {\n    font-size: var(--search-icon) !important;\n    cursor: pointer;\n}\n\ninput {\n    width: 0%;\n    font-family: var(--pri-ft);\n    font-size: 1.75rem;\n    color: white;\n    background-color: rgba(0, 0, 0, 0.5);\n    border: none;\n}\n\ninput:focus {\n    outline: none;\n}\n\nbutton {\n    background-color: transparent;\n    border: none;\n    display: none;\n}\n\n#weather-condition {\n    font-family: var(--sec-ft);\n    font-size: 2rem;\n    text-transform: capitalize;\n}\n\n.temperature-con {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.location-con {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.location {\n    font-family: var(--pri-ft);\n}\n\n#state {\n    font-size: 2rem;\n}\n\n#city {\n    font-size: 3rem;\n}\n\n.temperature-con {\n    font-family: var(--sec-ft);\n}\n\n#temperature {\n    font-size: 3.5rem;\n}\n\n#degrees {\n    font-size: 1.5rem;\n    padding-bottom: 1.5rem;\n}\n\n.temp-info {\n    margin-left: 1rem;\n    padding-left: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    border-left: 5px solid black;\n}\n\n.hi-lo {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: var(--sec-ft);\n}\n\n.info-temp {\n    padding-left: .25rem;\n}\n\n.scroll-box {\n    margin-left: -8rem;\n    width:75%;\n    overflow: auto;\n    white-space: nowrap;\n    border-radius: 50px;\n    background: linear-gradient(145deg, #1e2736, #232e40);\n    box-shadow: 20px 20px 60px #1c2533,\n                -20px -20px 60px #263145;\n}\n\n.todays-card {\n    width: calc(100% + 120px);\n    padding: 1rem;\n}\n\n.hourly-container {\n    display: flex;\n    align-items: center;\n}\n\n.hourly-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.hour {\n    font-family: var(--pri-ft);\n    font-size: 1.5rem;\n}\n\n.temp-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: var(--sec-ft);\n}\n\n.hourly-temp {\n    font-size: 1.5rem;\n}\n\n#card-wrapper {\n    margin-bottom: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n.cards {\n    width: 95%;\n    padding: 1rem;\n    font-family: var(--sec-ft);\n    display: grid;\n    grid-template-columns: .25fr 2fr;\n    gap: 5rem;\n    border-radius: 50px;\n    background: linear-gradient(145deg, #1e2736, #232e40);\n    box-shadow: 20px 20px 60px #1c2533,\n                -20px -20px 60px #263145;\n}\n\n.card-day {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    text-align: center;\n    margin: auto;\n}\n\n.hourly-container {\n    display: flex;\n    gap: 2rem;\n}\n\n.next-day-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.next-day-time {\n    font-family: var(--pri-ft);\n    font-size: 1.5rem;\n\n}\n.next-day-temp-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: var(--sec-ft);\n}\n\n.next-day-temp {\n    font-size: 1.5rem;\n}\n\n.next-day-degrees {\n    font-family: var(--sec-ft);\n}\n\n/*MEDIA BREAKPOINTS */\n/*Mobile Devices*/\n@media screen and (max-width: 425px) {\n    #main {\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 2fr 2fr;\n        grid-template-areas: "main-left"\n                             "main-right";\n    }\n\n    .weather-con,\n    .scroll-box {\n        margin-left: 0rem;\n    }\n\n    .weather-con {\n        height: 65%;\n    }\n\n    #card-wrapper {\n        align-items: center;\n    }\n\n    .cards {\n        gap: 2rem;\n        width: 100%;\n    }\n\n    .weather-icon {\n        width: 50px;\n        height: 50px;\n    }\n\n    .card-day {\n        font-size: 1.5rem;\n        text-align: left;\n    }\n}\n\n/*Tablets and Laptops*/\n@media screen and (min-width: 768px) and (max-width: 1023px) {\n    #main {\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 2fr 2fr;\n        grid-template-areas: "main-left"\n                             "main-right";\n    }\n\n    .weather-con,\n    .scroll-box {\n        margin-left: 0rem;\n    }\n\n    .weather-con {\n        height: 65%;\n    }\n\n    #card-wrapper {\n        align-items: center;\n    }\n\n    .cards {\n        gap: 2rem;\n        width: 100%;\n    }\n\n    .weather-icon {\n        width: 75px;\n        height: 75px;\n    }\n\n    .card-day {\n        font-size: 1.5rem;\n        text-align: left;\n    }\n}\n\n/*Large Laptops*/\n@media screen and (min-width: 1024px) and (max-width: 1440px) {\n    #main {\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 2fr 2fr;\n        grid-template-areas: "main-left"\n                             "main-right";\n    }\n\n    .weather-con,\n    .scroll-box {\n        margin-left: 0rem;\n    }\n\n    .weather-con {\n        height: 65%;\n    }\n\n    #card-wrapper {\n        align-items: center;\n    }\n\n    .cards {\n        gap: 2rem;\n        width: 100%;\n    }\n\n    .weather-icon {\n        width: 75px;\n        height: 75px;\n    }\n\n    .card-day {\n        font-size: 1.5rem;\n        text-align: left;\n    }\n\n    .hourly-container {\n        gap: 5rem;\n    }\n}'],sourceRoot:""}]);const o=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,A,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var s=this[o][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),A&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=A):l[4]="".concat(A)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(A," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],o=0;o<n.length;o++){var s=n[o],c=r.base?s[0]+r.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var m=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var f=A(p,r);r.byIndex=o,e.splice(o,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function A(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,A){var a=r(n=n||[],A=A||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var o=t(a[i]);e[o].references--}for(var s=r(n,A),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var A=void 0!==t.layer;A&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,A&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var A=e[r];if(void 0!==A)return A.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{const n=document.querySelector(".slider");const e=document.getElementById("state"),r=document.getElementById("city");function A(n){r.textContent=n[0],r.style.textTransform="capitalize",e.textContent=n[1],e.style.textTransform="capitalize"}function a(n,e){const t=document.createElement("div");t.classList.add("hourly-info");const r=document.createElement("p");r.classList.add("hour"),r.textContent=function(n){let e=n.split(/:| /).join("");const t=e.slice(e.length-2);return e=e.length>7?e.slice(0,2):e.slice(0,1),e+t}(n.dt.slice(11));const A=function(n){const e=document.createElement("img");return e.classList.add("weather-icon"),e.src=`https://openweathermap.org/img/wn/${n}@2x.png`,e}(n.weather[0].icon),a=document.createElement("div");a.classList.add("temp-container");const i=document.createElement("p");i.classList.add("hourly-temp"),i.textContent=Math.round(n.main.temp);const o=document.createElement("p");return o.classList.add("hourly-degrees"),o.textContent="metric"===e?"°C":"°F",a.append(i,o),t.append(r,A,a),t}function i(n){let e=0;const t=n[0].dt.slice(0,10);return n.forEach((n=>{t===n.dt.slice(0,10)&&e++})),e}const o=document.getElementById("search"),s=document.querySelector("button");function c(){"0px"===window.getComputedStyle(o).getPropertyValue("width")?(o.setAttribute("style","width: 75%; transition: width .5s ease;"),setTimeout((()=>{s.style.display="block"}),500)):(o.removeAttribute("style","width: 75%;"),o.style.transition="width .5s ease",setTimeout((()=>{s.style.display="none"}),100))}async function l(n,e){let t=n[0],r=n[1];const o=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${t},%20${r}&limit=5&appid=c4404ba7cc6d37e8768e9682ed0c7259`,{mode:"cors"}),s=await o.json();console.log(s),async function(n,e,t){let r=n[0].lat,o=n[0].lon;const s=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${r}&lon=${o}&appid=c4404ba7cc6d37e8768e9682ed0c7259&units=${e}`,{mode:"cors"}),c=await s.json();console.log(c),function(n,e,t){const r=document.getElementById("main-left"),A=n.list[0];document.getElementById("weather-condition").textContent=A.weather[0].description,document.getElementById("temperature").textContent=Math.round(A.main.temp),document.getElementById("low").textContent=e[0],document.getElementById("high").textContent=e[1],r.removeChild(r.lastChild),function(n,e){const t=document.getElementById("main-left"),r=document.createElement("div");r.classList.add("todays-card");const A=document.createElement("div");A.classList.add("hourly-container"),n.slice(0,i(n)).forEach((n=>{A.appendChild(a(n,e))})),r.appendChild(A);const o=document.createElement("div");o.classList.add("scroll-box"),o.appendChild(r),t.appendChild(o)}(n.list,t),function(n,e){!function(n,e){let t=1,r=function(n){let e=1,t=n[0].dt.slice(0,10);return n.forEach((n=>{n.dt.slice(0,10)!==t&&(e++,t=n.dt.slice(0,10))})),e}(n),A=0,o=i(n),s=o;const c=document.getElementById("main-right"),l=document.getElementById("card-wrapper");for(l.textContent="";t<=r;){let r=n.slice(A,s);const c=document.createElement("div");c.classList.add("cards",`day${t}`);const d=document.createElement("p");d.classList.add("card-day"),d.textContent=new Intl.DateTimeFormat("en-us",{weekday:"short"}).format(new Date(r[0].dt.slice(0,10)));const m=document.createElement("div");m.classList.add("hourly-container"),r.forEach((n=>{m.appendChild(a(n,e))})),c.append(d,m),l.appendChild(c),t++,A+=o,A!==n.length&&(o=i(n.slice(A))),s+=o}c.appendChild(l)}(n.slice(i(n)),e)}(n.list,t)}(c,function(n){const e=n.list,t=d(n.list[0].dt).slice(0,10);let r=Math.round(n.list[0].main.temp_min),A=Math.round(n.list[0].main.temp_max);return e.forEach((n=>{let e=d(n.dt).slice(0,10),a=Math.round(n.main.temp_min),i=Math.round(n.main.temp_max);n.dt=d(n.dt),e===t&&(a<=r&&(r=a),i>=A&&(A=i))})),[r,A]}(c),e),A(t)}(s,e,n)}function d(n){const e=new Date(1e3*n).toLocaleDateString(),t=new Date(1e3*n).toLocaleTimeString();let r="";return r=e.length<10?"0"+e:e,r+`, ${t}`}var m=t(379),p=t.n(m),f=t(795),C=t.n(f),B=t(569),u=t.n(B),g=t(565),I=t.n(g),h=t(216),x=t.n(h),y=t(589),w=t.n(y),b=t(426),v={};v.styleTagTransform=w(),v.setAttributes=I(),v.insert=u().bind(null,"head"),v.domAPI=C(),v.insertStyleElement=x(),p()(b.Z,v),b.Z&&b.Z.locals&&b.Z.locals;let E="imperial",k=[];const S=["Brooklyn","New York"];window.onload=n=>{l(S,E)},document.querySelector(".switch").addEventListener("click",(e=>{E=function(){getComputedStyle(document.body).getPropertyValue("--switch-rd");const e=document.querySelector(".switch"),t=document.getElementById("degrees"),r=document.getElementById("high-degrees"),A=document.getElementById("low-degrees");return"0px"===window.getComputedStyle(n).getPropertyValue("left")?(n.setAttribute("style","left: 50%; transition: all .5s ease;"),e.setAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043; transition: all .5s ease;"),t.textContent="°C",r.textContent="°C",A.textContent="°C","metric"):(n.setAttribute("style","left: 0; transition: all .5s ease;"),e.removeAttribute("style","background: linear-gradient(225deg, #232e40, #1e2736); box-shadow:  -20px 20px 18px #1d2635, 20px -20px 18px #253043;"),e.style.transition="all .5s ease",t.textContent="°F",r.textContent="°F",A.textContent="°F","imperial")}(),k.length>0?l(k,E):l(S,E)}));const z=document.querySelector("form");z.addEventListener("click",(n=>{if("search-icon"===n.target.id)c();else if("right-arrow"===n.target.id){n.preventDefault(),c();const e=document.getElementById("search").value,t=e.indexOf(",");k=" "===e.charAt(t+1)?e.split(", "):e.split(","),console.log(k),""===k[0]?alert("Please enter a City and State/Country, separated by a comma."):void 0===k[1]?alert("No State/Country was included. Please enter a City and State/Country, separated by a comma."):l(k,E),z.reset()}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,